// See https://aka.ms/new-console-template for more information

using System.Diagnostics;
using System.Text.Json;


String RunPythonPackage()
{
    var currentDirectory = Directory.GetCurrentDirectory();
    var jsonPath = Path.Combine(currentDirectory, "config.json");
    if (!File.Exists(jsonPath))
        throw new FileNotFoundException(
            String.Format("No config.json file found in current directory: {0}", currentDirectory)
        );

    var launcherConfig = JsonSerializer.Deserialize<LauncherConfig>(jsonPath);
    var startInfo = new ProcessStartInfo{
        FileName = "py",
        Arguments = String.Format(
            "-{0} \"{1}\" \"{2}\"",
            launcherConfig.pythonVersion,
            launcherConfig.command,
            launcherConfig.arguments
        ),
        UseShellExecute = false,// Do not use OS shell
        CreateNoWindow = true, // We don't need new window
        RedirectStandardOutput = true,// Any output, generated by application will be redirected back
        RedirectStandardError = true // Any error in standard output will be redirected back (for example exceptions)
    };
    using (Process process = Process.Start(startInfo))
    {
        if (process == null)
            throw new Exception("Process not started");

        using (StreamReader reader = process.StandardOutput)
        {
            string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
            string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
            return result;
        }
    }
}


void Main()
{
    RunPythonPackage();
}


struct LauncherConfig
{
    public string pythonVersion;
    public string command;
    public string arguments;
};